# awesome-client "local naughty=require('naughty'); require('awful').spawn.easy_async('env', function(out) naughty.notify({title="ENV", text=out})end)"

# export XDG_CURRENT_DESKTOP="KDE"
# export XDG_CONFIG_HOME=$HOME/.config
# export XDG_CURRENT_DESKTOP="KDE"

dirExists() {
	[[ -d "$1" ]]
}

programExists() {
	which "$1" &>/dev/null
}

appendToPath() {
	if dirExists "$1"; then
		[[ ":$PATH:" != *"$1"* ]] && export PATH="${PATH}:$1"
	fi
}

prependToPath() {
	if dirExists "$1"; then
		[[ ":$PATH:" != *"$1"* ]] && export PATH="$1:${PATH}"
	fi
}

if [ -f "$HOME/.keysdir/export" ]; then 
  export keysdir="$HOME/.keysdir"
  source $keysdir/export
else
  echo "keys dir not found"
fi

# default apps
export EDITOR="nvim"
export TERMINAL="alacritty"
# export BROWSER="firefox"

source $HOME/.sources/my_exports


# cleaning up home folder
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_CACHE_HOME="$HOME/.cache"

export GNUPGHOME="$XDG_DATA_HOME"/gnupg

# export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc
# export JULIA_DEPOT_PATH="$XDG_DATA_HOME/julia:$JULIA_DEPOT_PATH"
# export NODE_REPL_HISTORY="$XDG_DATA_HOME"/node_repl_history

export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter"

###
prependToPath "$HOME"/.local/bin
# appendToPath "/usr/games"



### Packagemanagers
## Homebrew
case "${OSTYPE}" in
  linux*) brew_path="/home/linuxbrew/.linuxbrew" ;;
  darwin*) brew_path="/opt/homebrew" ;;
esac
if [[ -f "${brew_path}/bin/brew" ]]; then
	eval "$("${brew_path}"/bin/brew shellenv)"
fi

## GUIX
appendToPath "$HOME"/.config/guix/current/bin
appendToPath "$HOME"/.guix-profile/bin

### Programming languages.
## GO
export GOROOT="/usr/local/go"
export GOPATH="${XDG_DATA_HOME:-$HOME/.local/share}/go"
export GOBIN="$GOPATH/bin"
appendToPath "$GOROOT/bin"
appendToPath "$GOBIN"

## Python Environment Manager
export CONDA_ROOT="${XDG_DATA_HOME:-$HOME/.local/share}/miniconda3"
export CONDARC="$HOME/.condarc"
case "${OSTYPE}" in
  linux*) CONDA_PREFIX="$CONDA_ROOT" ;;
  darwin*) CONDA_PREFIX="" ;;
esac
if [[ -f ${CONDA_PREFIX}/bin/conda ]]; then
	eval "$("${CONDA_PREFIX}/bin/conda" "shell.zsh" "hook")"
fi


## RUST
export CARGO_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/cargo"
export RUSTUP_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/rustup"
prependToPath "$CARGO_HOME/bin"

## Ruby Environment Manager
export RBENV_ROOT=${XDG_DATA_HOME:-$HOME/.local/share}/rbenv
# if programExists rbenv; then
# 	eval "$(rbenv init - n)"
# fi

[ -f "/home/ru/.ghcup/env" ] && source "/home/ru/.ghcup/env" # ghcup-env

## NODE Environment Managers
# FastNodeManager in Rust "https://github.com/Schniz/fnm"
# if programExists fnm; then
# 	eval "$(fnm env --use-on-cd)"
# fi

# NodeVersionManage "https://github.com/nvm-sh/nvm"
export NVM_DIR=${XDG_DATA_HOME:-$HOME/.local/share}/nvm
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

export NPM_CONFIG_USERCONFIG=$XDG_CONFIG_HOME/npm/npmrc
export NPM_CONFIG_CACHE=$XDG_CACHE_HOME/npm


GIT_HOME=$HOME/REPOS
export GIT_HOME

DOT_SHELL=$GIT_HOME/re_shell
BIN_SHELL=$DOT_SHELL/bin
SHELLSOURCE=$DOT_SHELL/home/sources
my_array=("functions" "zsh_functions" "exports" "aliases" "zsh_prompt" "path")

for m in "${my_array[@]}"; do
	[[ -f "$SHELLSOURCE/my_$m" ]] && source "$SHELLSOURCE/my_$m"
done



my_repo=("inst" "shell" "run" "net")
for r in "$my_repo[@]"; do
  [[ -d $GIT_HOME/re_$r ]] && eval DOT_$r=$GIT_HOME/re_$r && export DOT_$r
  if [ -d $GIT_HOME/re_$r/bin ]; then
    eval BIN_$r=$GIT_HOME/re_$r/bin && export BIN_$r
    # for d in $(command du "\$BIN_$r" | cut -f2); do   # "\$BIN_$r" a not visible after eval?
    for d in $(find "$GIT_HOME/re_$r/bin" -maxdepth 1 -type d); do
        appendToPath "$d"
    done
  fi
done

# Adds ~/.local/bin and subfolders to $PATH
# export PATH="$PATH:${$(find ~/.local/bin -maxdepth 1 -type d -printf %p:)%%:}"


# export NOTMUCH_CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/notmuch-config"
# export WGETRC="${XDG_CONFIG_HOME:-$HOME/.config}/wget/wgetrc"
# export PASSWORD_STORE_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/password-store"
# export ZDOTDIR="$HOME/.config/zsh"

export MANPAGER="less -R --use-color -Dd+r -Du+b"

# lf icons
export LF_ICONS="\
tw=:\
st=:\
ow=:\
dt=:\
di=:\
fi=:\
ln=:\
or=:\
ex=:\
*.c=:\
*.cc=:\
*.clj=:\
*.coffee=:\
*.cpp=:\
*.css=:\
*.d=:\
*.dart=:\
*.erl=:\
*.exs=:\
*.fs=:\
*.go=:\
*.h=:\
*.hh=:\
*.hpp=:\
*.hs=:\
*.html=:\
*.java=:\
*.jl=:\
*.js=:\
*.json=:\
*.lua=:\
*.md=:\
*.php=:\
*.pl=:\
*.pro=:\
*.py=:\
*.rb=:\
*.rs=:\
*.scala=:\
*.ts=:\
*.vim=:\
*.cmd=:\
*.ps1=:\
*.sh=:\
*.bash=:\
*.zsh=:\
*.fish=:\
*.tar=:\
*.tgz=:\
*.arc=:\
*.arj=:\
*.taz=:\
*.lha=:\
*.lz4=:\
*.lzh=:\
*.lzma=:\
*.tlz=:\
*.txz=:\
*.tzo=:\
*.t7z=:\
*.zip=:\
*.z=:\
*.dz=:\
*.gz=:\
*.lrz=:\
*.lz=:\
*.lzo=:\
*.xz=:\
*.zst=:\
*.tzst=:\
*.bz2=:\
*.bz=:\
*.tbz=:\
*.tbz2=:\
*.tz=:\
*.deb=:\
*.rpm=:\
*.jar=:\
*.war=:\
*.ear=:\
*.sar=:\
*.rar=:\
*.alz=:\
*.ace=:\
*.zoo=:\
*.cpio=:\
*.7z=:\
*.rz=:\
*.cab=:\
*.wim=:\
*.swm=:\
*.dwm=:\
*.esd=:\
*.jpg=:\
*.jpeg=:\
*.mjpg=:\
*.mjpeg=:\
*.gif=:\
*.bmp=:\
*.pbm=:\
*.pgm=:\
*.ppm=:\
*.tga=:\
*.xbm=:\
*.xpm=:\
*.tif=:\
*.tiff=:\
*.png=:\
*.svg=:\
*.svgz=:\
*.mng=:\
*.pcx=:\
*.mov=:\
*.mpg=:\
*.mpeg=:\
*.m2v=:\
*.mkv=:\
*.webm=:\
*.ogm=:\
*.mp4=:\
*.m4v=:\
*.mp4v=:\
*.vob=:\
*.qt=:\
*.nuv=:\
*.wmv=:\
*.asf=:\
*.rm=:\
*.rmvb=:\
*.flc=:\
*.avi=:\
*.fli=:\
*.flv=:\
*.gl=:\
*.dl=:\
*.xcf=:\
*.xwd=:\
*.yuv=:\
*.cgm=:\
*.emf=:\
*.ogv=:\
*.ogx=:\
*.aac=:\
*.au=:\
*.flac=:\
*.m4a=:\
*.mid=:\
*.midi=:\
*.mka=:\
*.mp3=:\
*.mpc=:\
*.ogg=:\
*.ra=:\
*.wav=:\
*.oga=:\
*.opus=:\
*.spx=:\
*.xspf=:\
*.pdf=:\
*.nix=:\
"
export LC_ALL=ru_RU.UTF-8

