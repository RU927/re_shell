#!/bin/bash
iatest=$(expr index "$-" i)

# {{{ Interactive check

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# -------------------------------------------------------------------------- }}}
# {{{ Source global definitions
if [ -f /etc/bash.bashrc ]; then
	. /etc/bash.bashrc
fi

# Enable bash programmable completion features in interactive shells
if [ -f /usr/share/bash-completion/bash_completion ]; then
	. /usr/share/bash-completion/bash_completion
elif [ -f /etc/bash_completion ]; then
	. /etc/bash_completion
fi

# -------------------------------------------------------------------------- }}}

# {{{ Ignore upper and lowercase when TAB completion

# bind "set completion-ignore-case on"
# Ignore case on auto-completion
# Note: bind used instead of sticking these in .inputrc
if [[ $iatest -gt 0 ]]; then bind "set completion-ignore-case on"; fi

# Show auto-completion list automatically, without double tab
if [[ $iatest -gt 0 ]]; then bind "set show-all-if-ambiguous On"; fi

# -------------------------------------------------------------------------- }}}

# Disable the bell
if [[ $iatest -gt 0 ]]; then bind "set bell-style visible"; fi

# {{{ Disable ctrl-s, ctrl-q, and set infinite history.

# stty -ixon
# Allow ctrl-S for history navigation (with ctrl-R)
[[ $- == *i* ]] && stty -ixon

HISTSIZE='' HISTFILESIZE=''

# -------------------------------------------------------------------------- }}}
# Check the window size after each command and, if necessary, update the values of LINES and COLUMNS
shopt -s checkwinsize

# Causes bash to append to history instead of overwriting it so if you start a new terminal, you have old session history
shopt -s histappend
PROMPT_COMMAND='history -a'

# Define directory exports that my_functions use.

CFG_HOME=$HOME/.config
export CFG_HOME

GIT_HOME=$HOME/REPOS
export GIT_HOME

# GIT_PATH=$GIT_HOME
# export GIT_PATH

DOT_INST=$GIT_HOME/re_inst
BIN_INST=$DOT_INST/bin
if [ -d "$DOT_INST" ]; then
	export DOT_INST
	export BIN_INST
fi

DOT_SHELL=$GIT_HOME/re_shell
BIN_SHELL=$DOT_SHELL/bin
SHELLSOURCE=$DOT_SHELL/home/sources
export DOT_SHELL
export BIN_SHELL
export HELLSOURCE

DOT_RUN=$GIT_HOME/re_run
BIN_RUN=$DOT_RUN/bin
if [ -d "$DOT_RUN" ]; then
	export DOT_RUN
	export BIN_RUN
fi

# SSHHOME=$GIT_HOME/ssh
# export SSHHOME
#
# WIKIHOME=$GIT_HOME/wiki
# export WIKIHOME

# {{{ Customize my shell. Array order matters.

my_array=("functions" "bash_func" "exports" "aliases" "paths" "completions" "bash_prompt")

for m in "${my_array[@]}"; do
	[[ -f "$SHELLSOURCE/my_$m" ]] && . "$SHELLSOURCE/my_$m"
done

# Load my keys.
# sshkeys

# -------------------------------------------------------------------------- }}}
echo "${HOSTNAME} on ${OSTYPE}"

if command -v zoxide >/dev/null; then
	eval "$(zoxide init bash)"
fi

#######################################################
# Set the ultimate amazing command prompt
#######################################################
# Install Starship - curl -sS https://starship.rs/install.sh | sh
# eval "$(starship init bash)"

#Autojump
if [ -f "/usr/share/autojump/autojump.sh" ]; then
	. /usr/share/autojump/autojump.sh
elif [ -f "/usr/share/autojump/autojump.bash" ]; then
	. /usr/share/autojump/autojump.bash
else
	echo "can't found the autojump script"
fi

# alias hug="hugo server -F --bind=10.0.0.210 --baseURL=http://10.0.0.210"
